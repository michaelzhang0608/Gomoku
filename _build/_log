### Starting build.
# Target: bot.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), extension:mli, file:bot.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -modules bot.mli > bot.mli.depends # cached
# Target: game.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), extension:mli, file:game.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -modules game.mli > game.mli.depends # cached
# Target: game.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:game.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -o game.cmi game.mli # cached
# Target: bot.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:bot.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -o bot.cmi bot.mli # cached
# Target: bot.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), coverage, extension:ml, file:bot.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -modules bot.ml > bot.ml.depends # cached
# Target: bot.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), byte, compile, coverage, extension:cmo, extension:ml, file:bot.cmo, file:bot.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -o bot.cmo bot.ml # cached
# Target: game.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), coverage, extension:ml, file:game.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -modules game.ml > game.ml.depends # cached
# Target: game.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), byte, compile, coverage, extension:cmo, extension:ml, file:game.cmo, file:game.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -o game.cmo game.ml # cached
# Target: main.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -o main.cmi main.mli # cached
# Target: main.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), coverage, extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -modules main.ml > main.ml.depends # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), byte, compile, coverage, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -o main.cmo main.ml # cached
# Target: authors.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), extension:mli, file:authors.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -modules authors.mli > authors.mli.depends # cached
# Target: authors.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:authors.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -o authors.cmi authors.mli # cached
# Target: authors.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), extension:ml, file:authors.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -modules authors.ml > authors.ml.depends # cached
# Target: authors.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(csv), package(ounit2), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:authors.cmo, file:authors.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package ounit2 -package qcheck -package str -package bisect_ppx -package ANSITerminal -o authors.cmo authors.ml # cached
# Compilation successful.
